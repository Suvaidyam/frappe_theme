[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Workflow",
  "enabled": 1,
  "modified": "2025-07-04 18:53:47.262896",
  "module": "Frappe Theme",
  "name": "Workflow Field Setup",
  "script": "frappe.ui.form.on('Workflow', {\n\trefresh(frm) {\n// \t\tconsole.log('workflow')\n\t}\n})\nfrappe.ui.form.on('Workflow Transition', {\n    custom_setup_fields: function (frm, cdt, cdn) {\n        const child = locals[cdt][cdn];\n        const doctype = frm.doc.document_type;\n\n        if (!doctype) {\n            frappe.msgprint(\"Please select Document Type first.\");\n            return;\n        }\n\n        frappe.model.with_doctype(doctype, () => {\n            const meta = frappe.get_meta(doctype);\n\n            const fields = meta.fields\n                .filter(df => frappe.model.is_value_type(df.fieldtype))\n                .map(df => ({\n                    label: df.label || df.fieldname,\n                    fieldname: df.fieldname\n                }));\n\n            if (fields.length === 0) {\n                frappe.msgprint(\"No fields found to select.\");\n                return;\n            }\n\n            // Parse saved JSON field selections\n            let pre_selected_fields = [];\n            try {\n                if (child.custom_selected_fields) {\n                    pre_selected_fields = JSON.parse(child.custom_selected_fields);\n                }\n            } catch (e) {\n                console.warn(\"Invalid JSON in custom_selected_fields\");\n            }\n\n            // Create a map for quick access\n            const pre_selected_map = {};\n            pre_selected_fields.forEach(field => {\n                pre_selected_map[field.fieldname] = field;\n            });\n\n            // Build single-column layout with 3 checkboxes per field\n            let html = `<div style=\"display: flex; flex-direction: column; gap: 8px;\">`;\n\n            fields.forEach(field => {\n                const saved = pre_selected_map[field.fieldname];\n                const is_included = !!saved; // only check if present in saved\n                const is_read_only = saved?.read_only ? 'checked' : '';\n                const is_required = saved?.reqd ? 'checked' : '';\n\n                html += `\n                    <div style=\"display: flex; align-items: center; gap: 12px;\">\n                        <label style=\"width: 200px;\">\n                            <input type=\"checkbox\" class=\"field-include\" data-fieldname=\"${field.fieldname}\" ${is_included ? 'checked' : ''}>\n                            ${field.label}\n                        </label>\n                        <label>\n                            <input type=\"checkbox\" class=\"field-readonly\" data-fieldname=\"${field.fieldname}\" ${is_read_only}>\n                            Read Only\n                        </label>\n                        <label>\n                            <input type=\"checkbox\" class=\"field-required\" data-fieldname=\"${field.fieldname}\" ${is_required}>\n                            Required\n                        </label>\n                    </div>\n                `;\n            });\n\n            html += `</div>`;\n\n            const dialog = new frappe.ui.Dialog({\n                title: `Select Fields from ${doctype}`,\n                fields: [\n                    {\n                        fieldname: \"field_checkboxes\",\n                        fieldtype: \"HTML\"\n                    }\n                ],\n                primary_action_label: \"Save\",\n                primary_action() {\n                    const selected_fields = [];\n\n                    $(dialog.fields_dict.field_checkboxes.wrapper)\n                        .find(\".field-include:checked\")\n                        .each(function () {\n                            const fieldname = $(this).data(\"fieldname\");\n                            const label = fields.find(f => f.fieldname === fieldname)?.label || fieldname;\n\n                            const read_only = $(`.field-readonly[data-fieldname=\"${fieldname}\"]`).is(\":checked\");\n                            const reqd = $(`.field-required[data-fieldname=\"${fieldname}\"]`).is(\":checked\");\n\n                            selected_fields.push({\n                                fieldname,\n                                label,\n                                read_only,\n                                reqd\n                            });\n                        });\n                    // Save to child field\n                    frappe.model.set_value(cdt, cdn, \"custom_selected_fields\", JSON.stringify(selected_fields));\n\n                    // frappe.show_alert({\n                    //     message: __('Fields saved successfully'),\n                    //     indicator: 'green'\n                    // });\n                    dialog.hide();\n                }\n            });\n\n            dialog.show();\n            dialog.fields_dict.field_checkboxes.$wrapper.html(html);\n        });\n    }\n});\n",
  "view": "Form"
 }
]